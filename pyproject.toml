[tool.poetry]
name = "contentctl"

version = "5.5.0"

description = "Splunk Content Control Tool"
authors = ["STRT <research@splunk.com>"]
license = "Apache 2.0"
readme = "README.md"

[tool.poetry.scripts]
contentctl = 'contentctl.contentctl:main'

[tool.poetry.dependencies]

python = "^3.11,<3.14"
pydantic = "~2.9.2"
PyYAML = "^6.0.2"
requests = "~2.32.3"
pycvesearch = "^1.2"
xmltodict = ">=0.13,<0.15"
attackcti = ">=0.5.4,<0.6"
Jinja2 = "^3.1.4"
questionary = "^2.0.1"
docker = "^7.1.0"
splunk-sdk = "^2.0.2"
semantic-version = "^2.10.0"
bottle = ">=0.12.25,<0.14.0"
tqdm = "^4.66.5"
pygit2 = "^1.15.1"
tyro = "^0.9.2"
gitpython = "^3.1.43"
setuptools = ">=69.5.1,<81.0.0"
rich = "^14.0.0"

[tool.poetry.group.dev.dependencies]
ruff = "^0.11.2"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".ipynb_checkpoints",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pyenv",
  ".pytest_cache",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  ".vscode",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "site-packages",
  "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

target-version = "py311"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"
